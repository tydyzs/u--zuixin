<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	    http://www.springframework.org/schema/mvc
	    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd		
		">

	<!-- 1. 数据源 : DriverManagerDataSource -->
	<!-- 
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://192.168.1.99:3306/mybatis" />
		<property name="username" value="root" />
		<property name="password" value="1234567" />
	</bean> -->
<!-- 引入数据库配置文件
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:/config/property/jdbc.properties" />
	</bean>	
	 -->

     <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">   
              <property name="driverClassName">   
                     <value>oracle.jdbc.driver.OracleDriver</value>   
              </property>   
              <property name="url">   
                     <value>jdbc:oracle:thin:@192.168.1.99:1521:orcl</value>   
              </property>   
              <property name="username">   
                     <value>system</value>   
              </property>   
              <property name="password">   
                     <value>shc51888</value>   
              </property>   
              <property name="maxActive">   
                     <value>255</value>   
              </property>   
              <property name="maxIdle">   
                     <value>2</value>   
              </property>   
              <property name="maxWait">   
                     <value>120000</value>   
              </property>   
       </bean> 

	<!--
		2. mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource:引用数据源

		MyBatis定义数据源,同意加载配置
	-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:config/mybatis-config.xml" /> 
	</bean>

	<!--
		3. mybatis自动扫描加载Sql映射文件/接口 : MapperScannerConfigurer sqlSessionFactory

		basePackage:指定sql映射文件/接口所在的包（自动扫描）
	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.tgb.mapper"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>

	<!--
		4. 事务管理 : DataSourceTransactionManager dataSource:引用上面定义的数据源
	-->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 5. 使用声明式事务
		 transaction-manager：引用上面定义的事务管理器
	 -->
	<tx:annotation-driven transaction-manager="txManager" />
	<!-- 
    <bean id="dataSource2" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">   

              <property name="driverClassName">   
                     <value>oracle.jdbc.driver.OracleDriver</value>   
              </property>   
              <property name="url">   
                     <value>jdbc:oracle:thin:@150.21.25.42:1521:PANYUDW</value>   
              </property>   
              <property name="username">   
                     <value>HX_USER</value>   
              </property>   
              <property name="password">   
                     <value>cx123</value>   
              </property> 
              
              <property name="maxActive">   
                     <value>255</value>   
              </property>   
              <property name="maxIdle">   
                     <value>2</value>   
              </property>   
              <property name="maxWait">   
                     <value>120000</value>   
              </property>   
       </bean> 
     -->   
    <bean id="dataSource2" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">   

              <property name="driverClassName">   
                     <value>oracle.jdbc.driver.OracleDriver</value>   
              </property>   
              <property name="url">   
                     <value>jdbc:oracle:thin:@192.168.1.99:1521:orcl</value>   
              </property>   
              <property name="username">   
                     <value>system</value>   
              </property>   
              <property name="password">   
                     <value>shc51888</value>   
              </property>   
              
              <property name="maxActive">   
                     <value>255</value>   
              </property>   
              <property name="maxIdle">   
                     <value>2</value>   
              </property>   
              <property name="maxWait">   
                     <value>120000</value>   
              </property>   
       </bean> 
	<!--
		2. mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource:引用数据源

		MyBatis定义数据源,同意加载配置
	-->
	<bean id="sqlSessionFactory2" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource2"></property>
		<property name="configLocation" value="classpath:config/mybatis-config2.xml" /> 
	</bean>

	<!--
		3. mybatis自动扫描加载Sql映射文件/接口 : MapperScannerConfigurer sqlSessionFactory

		basePackage:指定sql映射文件/接口所在的包（自动扫描）
	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.tgb.mapper2"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory2"></property>
	</bean>

	<!--
		4. 事务管理 : DataSourceTransactionManager dataSource:引用上面定义的数据源
	-->
	<bean id="txManager2"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource2"></property>
		<qualifier value="insurance" />
	</bean>

	<!-- 5. 使用声明式事务
		 transaction-manager：引用上面定义的事务管理器
	 -->
	<tx:annotation-driven transaction-manager="txManager2" />	
	
	<!-- 拦截器--> 
	<mvc:interceptors>
		<bean class="com.tgb.util.LoginInterceptor"/>
			<mvc:interceptor>
				<mvc:mapping path="/*/**" />				
				<mvc:exclude-mapping path="/user_new/checkUser"/>
				<mvc:exclude-mapping path="/user_new/queryByName_new"/>
				<mvc:exclude-mapping path="/css/**"/>
				<mvc:exclude-mapping path="/img/**"/>
				<mvc:exclude-mapping path="/jsp/**"/>
				<mvc:exclude-mapping path="/js/**"/>
				<mvc:exclude-mapping path="/login.jsp"/>
				<mvc:exclude-mapping path="/index.jsp"/>
				<bean class="com.tgb.util.LoginInterceptor"/>
			</mvc:interceptor>
	</mvc:interceptors>
<!-- 	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**/*.*"/>
			<bean class="com.tgb.util.LoginInterceptor_new"/>
		</mvc:interceptor>
	</mvc:interceptors>	 -->
<!-- 	<mvc:interceptors>
		<bean class="com.tgb.util.LoginInterceptor_new"/>
			<mvc:interceptor>
				<mvc:mapping path="/*/**" />				
				<mvc:exclude-mapping path="/user_new/checkUser"/>
				<mvc:exclude-mapping path="/css/**"/>
				<mvc:exclude-mapping path="/img/**"/>
				<mvc:exclude-mapping path="/jsp/**"/>
				<mvc:exclude-mapping path="/js/**"/>
				<mvc:exclude-mapping path="/login.jsp"/>
				<bean class="com.tgb.util.LoginInterceptor_new"/>
			</mvc:interceptor>
	</mvc:interceptors>	 -->
 	  
 <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" p:defaultEncoding="utf-8"/>	 
</beans>
