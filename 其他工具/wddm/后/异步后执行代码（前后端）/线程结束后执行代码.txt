public static void main(String[] args) {
	aa();
	
	
}

public synchronized static void aa(){

	final CountDownLatch latch = new CountDownLatch(2);
	Thread rose=new Thread(){
		public void run(){
			for(int i=0;i<2;i++){
				System.out.println("rose--111");
				try {
					Thread.sleep(1000);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
				}

			
			latch.countDown(); 
		}
		
	};
	
	Thread rose1=new Thread(){
		public void run(){
			for(int i=0;i<2;i++){
				System.out.println("rose--222");
				try {
					Thread.sleep(1000);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
				}

			
			latch.countDown(); 
		}
	};
	
	
	
	
	
	Thread rose2=new Thread(){
	public   void run(){
		System.out.println(000000);
		try {
			latch.await();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		System.out.println("所有线程执行完毕");
	}
	};
	
	
	
	
	rose.start();rose1.start();rose2.start();

}